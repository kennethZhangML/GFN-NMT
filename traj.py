import torch
import numpy as np

from metrics import reward_function

def evaluate_trajectories(self, traj, reference_translations):
    """
    Evaluate the quality of translations generated by the GFlowNet and compute rewards.

    Args:
        traj: List of generated trajectories (each trajectory is a list of states).
        reference_translations: List of reference translations (ground truth).

    Returns:
        rewards: List of rewards for each trajectory based on translation quality.
    """
    num_samples = len(traj)
    rewards = []

    for i in range(num_samples):
        translation_states = traj[i]  
        reference_translation = reference_translations[i]

        generated_tokens = [state.tolist() for state in translation_states]

        reward = reward_function(reference_translation, generated_tokens)
        rewards.append(reward)

    return rewards
